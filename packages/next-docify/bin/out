#!/usr/bin/env node

const { existsSync, readFileSync, copySync } = require('fs-extra');
const { join, resolve, relative } = require('path');
const program = require('commander');
const mkdirp = require('mkdirp');
const cp = require('recursive-copy');
const rimraf = require('rimraf');
const exportApp = require('next/dist/server/export').default;
const siteConfig = require('../lib/site-config');
const interpolateManifestScript = require('../lib/fs-messer/interpolateManifestScript');

program
  .description('export standalone static assets')
  .on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ next-notify export');
    console.log();
  });

program.parse(process.argv);

process.env.NODE_ENV = 'production';

const dir = resolve('.');

const options = {
  silent: program.silent,
  outdir: program.outdir ? resolve(program.outdir) : resolve(dir, 'out')
};

rimraf.sync(resolve('.', 'out'));
const nextDestDir = join(process.cwd(), '.next');
const nextOutputDir = join(process.cwd(), 'out');

exportApp(dir, options).then(() => {
  if (existsSync(join(nextDestDir, 'docify-chunks'))) {
    mkdirp(join(nextOutputDir, '_next', 'webpack'), () => {
     cp (
        join(nextDestDir, 'docify-chunks'),
        join(nextOutputDir, '_next', 'webpack', 'docify-chunks'), (err) => {
          if (err) console.error('err : ', err);
        }
      );
    });
  }

  try {
    const buildId = readFileSync(join(nextDestDir, 'BUILD_ID'), 'utf8');

    copySync(
      join(nextDestDir, 'manifest.js'),
      join(nextOutputDir, '_next', buildId, 'manifest.js')
    );

    copySync(
      join(nextDestDir, 'manifest2.js'),
      join(nextOutputDir, '_next', buildId, 'manifest2.js')
    );
  } catch(err) {
    // ...
  }

  interpolateManifestScript(nextOutputDir);
}).catch((err) => {
  console.error(err);
});
